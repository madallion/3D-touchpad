<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width user-scalable=no">
    <title>TouchPad</title>
    <style>
      * {
        -webkit-user-select: none;
      }
      body, html {
        margin: 0;
        height: 100%;
        position: relative;
      }
      body {
        overflow: auto;
      }
      #capture {
        background-color: orange;
        height: 300px;
        width: 300px;
        text-align: center;
        -webkit-user-select: none;
      }
      #enterleave {
        background-color: blue;
        height: 150px;
        width: 150px;
        text-align: center;
        vertical-align: center;
        line-height: 150px;
        left: 25%;
        top: 25%;
        position: relative;
      }
      #output {
        width: 300px;
        height: 150px;
        overflow: scroll;
      }
    </style>
    <script src="js/polymer-gestures.js"></script>
    <script src="js/ui.js"></script>
    <script src="js/audio.js"></script>
  </head>
  <body>
<!--
    <div id="capture">
      <div id="enterleave">
      </div>
    </div>
-->
    <div id="output" touch-action="none" style="position: absolute; width: 100%; z-index: 1000; height: 100px; bottom: 0px; left:0px"></div>
    <script>
      var events = [
        // base events
        'click',
        'pointerdown',
        'pointerup',
        'pointermove',
        'pointerover',
        'pointerout'
      ];

      function appendOutput(inString) {
//        var it = output.innerText;
//        output.innerText = inString + '\n' + it;
      }
//      find('capture', 'output', 'enterleave');

/*
      events.forEach(function(en) {
        capture.addEventListener(en, function(inEvent) {
          appendOutput(inEvent.type + ' [' + inEvent.pointerId + ']');
        });
      });
      enterleave.addEventListener('pointerover', function(e) {
        appendOutput('enterleave entered');
      });
      enterleave.addEventListener('pointerout', function(e) {
        appendOutput('enterleave left');
      });
*/
    </script>
    
    <h1>Hello, LeapJS (V2)!</h1>
    <div id="output"></div>
    
    <script src="https://js.leapmotion.com/leap-0.6.4.js"></script>
    
    <script type="text/javascript">
    
    function concatData(id, data) {
      return id + ": " + data + "<br>";
    }
    
    function getFingerName(fingerType) {
      switch(fingerType) {
        case 0:
          return 'Thumb';
        break;
    
        case 1:
          return 'Index';
        break;
    
        case 2:
          return 'Middle';
        break;
    
        case 3:
          return 'Ring';
        break;
    
        case 4:
          return 'Pinky';
        break;
      }
    }
    
    function concatJointPosition(id, position) {
      return id + ": " + position[0] + ", " + position[1] + ", " + position[2] + "<br>";
    }
    
    
    var output = document.getElementById('output');
    var frameString = "", handString = "", fingerString = "";
    var hand, finger;
    
    // Leap.loop uses browser's requestAnimationFrame
    var options = { enableGestures: true };
    
    var objMidi;
    
    // Main Leap Loop
    Leap.loop(options, function(frame) {
      frameString = concatData("frame_id", frame.id);
      frameString += concatData("num_hands", frame.hands.length);
      frameString += concatData("num_fingers", frame.fingers.length);
      frameString += "<br>";
    
      // Showcase some new V2 features
      for (var i = 0, len = frame.hands.length; i < len; i++) {
        hand = frame.hands[i];
        handString = concatData("hand_type", hand.type);
        handString += concatData("confidence", hand.confidence);
        handString += concatData("pinch_strength", hand.pinchStrength);
        handString += concatData("grab_strength", hand.grabStrength);
    
        handString += '<br>';
    
        // Helpers for thumb, pinky, etc.
        fingerString = concatJointPosition("finger_thumb_dip", hand.thumb.dipPosition);
        for (var j = 0, len2 = hand.fingers.length; j < len2; j++) {
          finger = hand.fingers[j];
          fingerString += concatData("finger_type", finger.type) + " (" + getFingerName(finger.type) + ") <br>";
          fingerString += concatJointPosition("finger_dip", finger.dipPosition);
          fingerString += concatJointPosition("finger_pip", finger.pipPosition);
          fingerString += concatJointPosition("finger_mcp", finger.mcpPosition);
          fingerString += "<br>";
        }
    
        frameString += handString;
        frameString += fingerString;
        
        //
        var ret = finger.dipPosition;
        var x = 10 * ret[1];
        var y = 10 * ret[2];
        var eventLeapMotion = {
        	clientX: x,
        	clientY: y,
        	pointerId: 1
        	};
        	
  				//if(objMidi) {objMidi.stopSound();}
        	if(! objMidi) 
        	{
        		objMidi = new SoundEvent( eventLeapMotion );
        	}
        	objMidi.x = x;
      		objMidi.y = y;
        	objMidi.setFilter();
        	
       //for (var idx = 0, idx < 10000; idx++){ 
        	//objMidi = new SoundEvent( eventLeapMotion )
        //}
      }
    
      output.innerHTML = frameString;
    
    });
    
    // Stop: 
    //if(objMidi) {objMidi.stopSound();}
    
    </script>
  </body>
</html>
